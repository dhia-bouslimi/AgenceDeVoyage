{% extends 'base.html.twig' %}
{% block stylesheets %}
	<link rel="stylesheet" href="{{ asset('assets/plugins/chartist/dist/chartist.min.css') }}">

{% endblock %}
{% block title %}Avis index
{% endblock %}

{% block body %}

	<!-- ============================================================== -->
	<!-- Start right Content here -->
	<!-- ============================================================== -->
		<div
		class="content-page"> <!-- Start content -->
		<div class="content">
			<div class="container-fluid">


				<div class="row">
					<div class="col-12">
						<div class="card-box">
							<div class="dropdown pull-right">
								<a href="#" class="dropdown-toggle arrow-none card-drop" data-toggle="dropdown" aria-expanded="false"></a>
								<div
									class="dropdown-menu dropdown-menu-right">
									<!-- item-->
									<a href="javascript:void(0);" class="dropdown-item">Action</a>
									<!-- item-->
									<a href="javascript:void(0);" class="dropdown-item">Another action</a>
									<!-- item-->
									<a href="javascript:void(0);" class="dropdown-item">Something else</a>
									<!-- item-->
									<a href="javascript:void(0);" class="dropdown-item">Separated link</a>
								</div>
							</div>
							<h4 class="m-t-0 header-title">Statistiques des avis sur les hotels
							</h4>

						</br>
					</br>
					<a href="{{ path('app_avis_index') }}">retour Ã  la liste des avis</a>

				</div>
			</div>
		</div>
		<div class="row" height="400px">
			<div class="col-xl-6">
				<div class="card-box">
					<div class="dropdown pull-right">
						<a href="#" class="dropdown-toggle arrow-none card-drop" data-toggle="dropdown" aria-expanded="false">
							<i class="mdi mdi-dots-vertical"></i>
						</a>
						<div
							class="dropdown-menu dropdown-menu-right">
							<!-- item-->
							<a href="javascript:void(0);" class="dropdown-item">Action</a>
							<!-- item-->
							<a href="javascript:void(0);" class="dropdown-item">Another action</a>
							<!-- item-->
							<a href="javascript:void(0);" class="dropdown-item">Something else</a>
							<!-- item-->
							<a href="javascript:void(0);" class="dropdown-item">Separated link</a>
						</div>
					</div>

					<h4 class="header-title m-t-0 m-b-30">La moyenne des avis par hotels</h4>

					<div id="distributed-series" class="ct-chart ct-golden-section">
						<div class="chartist-tooltip" style="top: 216px; left: 317.5px;">
							<span class="chartist-tooltip-value">200</span>
						</div>
						<svg xmlns:ct="http://gionkunz.github.com/chartist-js/ct" width="100%" height="100%" class="ct-chart-bar" style="width: 100%; height: 100%;">
						</svg>
					</div>
				</div>
			</div>
			<div class="col-xl-6">
				<div class="card-box">
					<div class="dropdown pull-right">
						<a href="#" class="dropdown-toggle arrow-none card-drop" data-toggle="dropdown" aria-expanded="false">
							<i class="mdi mdi-dots-vertical"></i>
						</a>
						<div
							class="dropdown-menu dropdown-menu-right">
							<!-- item-->
							<a href="javascript:void(0);" class="dropdown-item">Action</a>
							<!-- item-->
							<a href="javascript:void(0);" class="dropdown-item">Another action</a>
							<!-- item-->
							<a href="javascript:void(0);" class="dropdown-item">Something else</a>
							<!-- item-->
							<a href="javascript:void(0);" class="dropdown-item">Separated link</a>
						</div>
					</div>

					<h4 class="header-title m-t-0 m-b-30">La somme des avis par Hotel</h4>

					<div id="animating-donut" class="ct-chart ct-golden-section">
						<div class="chartist-tooltip" style="top: 227px; left: 409px;">
							<span class="chartist-tooltip-value">50</span>
						</div>
						<svg xmlns:ct="http://gionkunz.github.com/chartist-js/ct" width="100%" height="100%" class="ct-chart-donut" style="width: 100%; height: 100%;"></svg>
					</div>
				</div>
			</div>


		</div>
	{% endblock %}
	{% block javascripts %}

		<!--Chartist Chart-->
		<script src="{{ asset('assets/plugins/chartist/dist/chartist.min.js')}}"></script>
		<script src="{{ asset('assets/plugins/chartist/dist/chartist-plugin-tooltip.min.js')}}"></script>
		<script>

			// Animating a Donut with Svg.animate

var chartData = new Array();
var chartLabel = new Array();
{% for stat in stats %}
    chartData.push('{{ stat.value }}'); //Fill up the total queue
    chartLabel.push('{{ stat[0].hotel.nom }}')
{% endfor %}


var pieChartData = new Array();
var pieChartLabel = new Array();
{% for stat in pieStats %}
    pieChartData.push('{{ stat.value }}'); //Fill up the total queue
    pieChartLabel.push('{{ stat[0].hotel.nom }}')
{% endfor %}

var chart = new Chartist.Pie('#animating-donut', {
series: pieChartData,
labels: pieChartLabel
}, {
donut: true,
showLabel: false,
plugins: [Chartist.plugins.tooltip()]
});

chart.on('draw', function (data) {
if (data.type === 'slice') { // Get the total path length in order to use for dash array animation
var pathLength = data.element._node.getTotalLength();

// Set a dasharray that matches the path length as prerequisite to animate dashoffset
data.element.attr({
'stroke-dasharray': pathLength + 'px ' + pathLength + 'px'
});

// Create animation definition while also assigning an ID to the animation for later sync usage
var animationDefinition = {
'stroke-dashoffset': {
id: 'anim' + data.index,
dur: 1000,
from: - pathLength + 'px',
to: '0px',
easing: Chartist.Svg.Easing.easeOutQuint,
// We need to use `fill: 'freeze'` otherwise our animation will fall back to initial (not visible)
fill: 'freeze'
}
};

// If this was not the first slice, we need to time the animation so that it uses the end sync event of the previous animation
if (data.index !== 0) {
animationDefinition['stroke-dashoffset'].begin = 'anim' + (
data.index - 1
) + '.end';
}

// We need to set an initial value before the animation starts as we are not in guided mode which would do that for us
data.element.attr({
'stroke-dashoffset': - pathLength + 'px'
});

// We can't use guided mode as the animations need to rely on setting begin manually
// See http://gionkunz.github.io/chartist-js/api-documentation.html#chartistsvg-function-animate
data.element.animate(animationDefinition, false);
}
});

// For the sake of the example we update the chart every time it's created with a delay of 8 seconds
chart.on('created', function () {
if (window.__anim21278907124) {
clearTimeout(window.__anim21278907124);
window.__anim21278907124 = null;
}
window.__anim21278907124 = setTimeout(chart.update.bind(chart), 10000);
});


// Distributed series

new Chartist.Bar('#distributed-series', {
labels: chartLabel,
series: chartData
}, {
distributeSeries: true,
plugins: [Chartist.plugins.tooltip()]
});

		</script>

	{% endblock %}
